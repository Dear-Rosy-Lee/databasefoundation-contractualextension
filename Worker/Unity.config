<?xml version="1.0"?>
<unity>
  <sectionExtension type="Microsoft.Practices.Unity.InterceptionExtension.Configuration.InterceptionConfigurationExtension, Microsoft.Practices.Unity.Interception.Configuration" />

  <container name ="TrackerDevice">
    <extension type="Microsoft.Practices.Unity.InterceptionExtension.Interception, Microsoft.Practices.Unity.Interception"></extension>

    <register name="TrackerDevice.Console"
                  type ="YuLinTu.ITrackerDevice, YuLinTu.Diagnostics"
                  mapTo ="YuLinTu.TrackerDeviceConsole, YuLinTu.Diagnostics"></register>
    <!--<register name="TrackerDevice.Console.Error"
                  type ="YuLinTu.ITrackerDevice, YuLinTu.Diagnostics"
                  mapTo ="YuLinTu.TrackerDeviceConsoleError, YuLinTu.Diagnostics"></register>-->
    <!--<register name="TrackerDevice.Debug"
                  type ="YuLinTu.ITrackerDevice, YuLinTu.Diagnostics"
                  mapTo ="YuLinTu.TrackerDeviceDebug, YuLinTu.Diagnostics"></register>-->
    <!--<register name="TrackerDevice.Debug.Error"
                  type ="YuLinTu.ITrackerDevice, YuLinTu.Diagnostics"
                  mapTo ="YuLinTu.TrackerDeviceDebugError, YuLinTu.Diagnostics"></register>-->
    <!--<register name="TrackerDevice.Application"
              type ="YuLinTu.ITrackerDevice, YuLinTu.Diagnostics"
              mapTo ="YuLinTu.Data.TrackerDeviceApplication, YuLinTu.Data">
      <constructor>
      </constructor>
    </register>-->
    <register name="TrackerDevice.Application.Exception"
              type ="YuLinTu.ITrackerDevice, YuLinTu.Diagnostics"
              mapTo ="YuLinTu.Data.TrackerDeviceApplicationException, YuLinTu.Data">
      <constructor>
      </constructor>
    </register>
    <!--<register name="TrackerDevice.ASCII"
                  type ="YuLinTu.ITrackerDevice, YuLinTu.Diagnostics"
                  mapTo ="YuLinTu.Data.TrackerDeviceASCIIFile, YuLinTu.Data">
            <constructor>
                <param name="fileName"
                       value="Logs\Temp.log"></param>
            </constructor>
        </register>-->

    <!--默认系统数据源-->
    <!--
        <register name="dbSource"
                  type ="YuLinTu.Data.IDataSource, YuLinTu.Data"
                  mapTo ="YuLinTu.Data.DbContext, YuLinTu.Data">
            <constructor>
                <param name ="cntStringName"
                       value="YuLinTu.Security.SQLServer"></param>
            </constructor>
        </register>

        -->
    <!--日志-->
    <!--
        <register name ="repTrackerObject"
                  type ="YuLinTu.Data.IRepositoryTrackerObject`1[[YuLinTu.Data.TrackerObjectItem, YuLinTu.Data.Framework]], YuLinTu.Data.Framework"
                  mapTo ="YuLinTu.Data.RepositoryTrackerObject`1[[YuLinTu.Data.TrackerObjectItem, YuLinTu.Data.Framework]], YuLinTu.Data.Framework">
            <constructor>
                <param name ="ds">
                    <dependency name="dbSource"></dependency>
                </param>
            </constructor>
        </register>
        <register name ="bnsTrackerObject"
                  type ="YuLinTu.Data.IBusinessTrackerObject`1[[YuLinTu.Data.TrackerObjectItem, YuLinTu.Data.Framework]], YuLinTu.Data.Framework"
                  mapTo ="YuLinTu.Data.BusinessTrackerObject`1[[YuLinTu.Data.TrackerObjectItem, YuLinTu.Data.Framework]], YuLinTu.Data.Framework">
            <interceptor type="Microsoft.Practices.Unity.InterceptionExtension.InterfaceInterceptor, Microsoft.Practices.Unity.Interception"></interceptor>
            <interceptionBehavior type="YuLinTu.Unity.Interception.TrackerInterception, YuLinTu.Unity.Interception"></interceptionBehavior>
            <constructor>
                <param name ="rep">
                    <dependency name ="repTrackerObject"></dependency>
                </param>
            </constructor>
        </register>

        -->
    <!--业务系统日志-->
    <!--
        <register name="TrackerDevice.Business.Event"
                  type ="YuLinTu.ITrackerDevice, YuLinTu.Diagnostics"
                  mapTo ="YuLinTu.Data.TrackerDeviceBusinessEvent`1[[YuLinTu.Data.TrackerObjectItem, YuLinTu.Data.Framework]], YuLinTu.Data.Framework">
            <constructor>
                <param name="tracker">
                    <dependency name="bnsTrackerObject"></dependency>
                </param>
            </constructor>
            <property name="SaveDuration"
                      value="1000"></property>
            -->
    <!--<property name="EventIDMinimum"
                      value="0"></property>-->
    <!--
            <property name="EventIDMinimum"
                      value="0x40000000"></property>
            <property name="EventIDMaximum"
                      value="0x7FFFFFFF"></property>
        </register>-->
  </container>

  <container name ="Business.Default">
    <extension type="Microsoft.Practices.Unity.InterceptionExtension.Interception, Microsoft.Practices.Unity.Interception"></extension>

    <register name="dbSource"
              type ="YuLinTu.Data.IDataSource, YuLinTu.Data"
              mapTo ="YuLinTu.Data.DbContext, YuLinTu.Data">
      <constructor>
        <param name ="cntStringName"
               value="YuLinTu.Survery.SQLServer"></param>
      </constructor>
    </register>
    <register name="dbSourceSecurity"
              type ="YuLinTu.Data.IDataSource, YuLinTu.Data"
              mapTo ="YuLinTu.Data.DbContext, YuLinTu.Data">
      <constructor>
        <param name ="cntStringName"
               value="YuLinTu.Security.SQLServer"></param>
      </constructor>
    </register>

    <register name="repDynamic"
              type ="YuLinTu.Data.Dynamic.IRepositoryDynamic, YuLinTu.Data.Dynamic"
              mapTo ="YuLinTu.Data.Dynamic.RepositoryDynamic, YuLinTu.Data.Dynamic">
      <!--<interceptor type="Microsoft.Practices.Unity.InterceptionExtension.InterfaceInterceptor, Microsoft.Practices.Unity.Interception"></interceptor>
            <interceptionBehavior type="YuLinTu.Unity.Interception.CacheInterception, YuLinTu.Unity.Interception"></interceptionBehavior>-->
      <constructor>
        <param name ="ds">
          <dependency name="dbSource"></dependency>
        </param>
      </constructor>
    </register>
    <register type ="YuLinTu.Data.Dynamic.IRepositoryDynamic, YuLinTu.Data.Dynamic"
              mapTo ="YuLinTu.Data.Dynamic.RepositoryDynamic, YuLinTu.Data.Dynamic">
      <!--<interceptor type="Microsoft.Practices.Unity.InterceptionExtension.InterfaceInterceptor, Microsoft.Practices.Unity.Interception"></interceptor>
            <interceptionBehavior type="YuLinTu.Unity.Interception.CacheInterception, YuLinTu.Unity.Interception"></interceptionBehavior>-->
      <constructor>
        <param name ="ds">
          <dependency name="dbSource"></dependency>
        </param>
      </constructor>
    </register>
    <register name="repDynamicDefinition"
              type ="YuLinTu.Data.Dynamic.IRepositoryDynamicDefinition, YuLinTu.Data.Dynamic"
              mapTo ="YuLinTu.Data.Dynamic.RepositoryDynamicDefinition, YuLinTu.Data.Dynamic">
      <interceptor type="Microsoft.Practices.Unity.InterceptionExtension.InterfaceInterceptor, Microsoft.Practices.Unity.Interception"></interceptor>
      <interceptionBehavior type="YuLinTu.Unity.Interception.CacheInterception, YuLinTu.Unity.Interception"></interceptionBehavior>
      <constructor>
        <param name ="ds">
          <dependency name="dbSource"></dependency>
        </param>
      </constructor>
    </register>
    <register type ="YuLinTu.Data.Dynamic.IRepositoryDynamicDefinition, YuLinTu.Data.Dynamic"
              mapTo ="YuLinTu.Data.Dynamic.RepositoryDynamicDefinition, YuLinTu.Data.Dynamic">
      <interceptor type="Microsoft.Practices.Unity.InterceptionExtension.InterfaceInterceptor, Microsoft.Practices.Unity.Interception"></interceptor>
      <interceptionBehavior type="YuLinTu.Unity.Interception.CacheInterception, YuLinTu.Unity.Interception"></interceptionBehavior>
      <constructor>
        <param name ="ds">
          <dependency name="dbSource"></dependency>
        </param>
      </constructor>
    </register>
    <register type ="YuLinTu.Data.Dynamic.IDynamicQuery, YuLinTu.Data.Dynamic"
              mapTo ="YuLinTu.Data.Dynamic.DynamicQuery, YuLinTu.Data.Dynamic">
      <interceptor type="Microsoft.Practices.Unity.InterceptionExtension.InterfaceInterceptor, Microsoft.Practices.Unity.Interception"></interceptor>
      <!--<interceptionBehavior type="YuLinTu.Unity.Interception.TimerInterception, YuLinTu.Unity.Interception"></interceptionBehavior>-->
      <interceptionBehavior type="YuLinTu.Unity.Interception.TrackerInterception, YuLinTu.Unity.Interception"></interceptionBehavior>
      <constructor>
        <param name ="rep">
          <dependency name ="repDynamic"></dependency>
        </param>
        <param name ="repd">
          <dependency name ="repDynamicDefinition"></dependency>
        </param>
      </constructor>
    </register>
    <register name ="wstDynamic"
              type ="YuLinTu.Data.Dynamic.IDynamicQuery, YuLinTu.Data.Dynamic"
              mapTo ="YuLinTu.Data.Dynamic.DynamicQuery, YuLinTu.Data.Dynamic">
      <interceptor type="Microsoft.Practices.Unity.InterceptionExtension.InterfaceInterceptor, Microsoft.Practices.Unity.Interception"></interceptor>
      <!--<interceptionBehavior type="YuLinTu.Unity.Interception.TimerInterception, YuLinTu.Unity.Interception"></interceptionBehavior>-->
      <interceptionBehavior type="YuLinTu.Unity.Interception.TrackerInterception, YuLinTu.Unity.Interception"></interceptionBehavior>
      <constructor>
        <param name ="rep">
          <dependency name ="repDynamic"></dependency>
        </param>
        <param name ="repd">
          <dependency name ="repDynamicDefinition"></dependency>
        </param>
      </constructor>
    </register>
    <register type ="YuLinTu.Data.Dynamic.IDynamicSurvey, YuLinTu.Data.Dynamic"
              mapTo ="YuLinTu.Data.Dynamic.DynamicSurvey, YuLinTu.Data.Dynamic">
      <interceptor type="Microsoft.Practices.Unity.InterceptionExtension.InterfaceInterceptor, Microsoft.Practices.Unity.Interception"></interceptor>
      <!--<interceptionBehavior type="YuLinTu.Unity.Interception.TimerInterception, YuLinTu.Unity.Interception"></interceptionBehavior>-->
      <interceptionBehavior type="YuLinTu.Unity.Interception.TrackerInterception, YuLinTu.Unity.Interception"></interceptionBehavior>
      <constructor>
        <param name ="rep">
          <dependency name ="repDynamic"></dependency>
        </param>
        <param name ="repd">
          <dependency name ="repDynamicDefinition"></dependency>
        </param>
      </constructor>
    </register>
    <register name ="wstSurvey"
              type ="YuLinTu.Data.Dynamic.IDynamicSurvey, YuLinTu.Data.Dynamic"
              mapTo ="YuLinTu.Data.Dynamic.DynamicSurvey, YuLinTu.Data.Dynamic">
      <interceptor type="Microsoft.Practices.Unity.InterceptionExtension.InterfaceInterceptor, Microsoft.Practices.Unity.Interception"></interceptor>
      <!--<interceptionBehavior type="YuLinTu.Unity.Interception.TimerInterception, YuLinTu.Unity.Interception"></interceptionBehavior>-->
      <interceptionBehavior type="YuLinTu.Unity.Interception.TrackerInterception, YuLinTu.Unity.Interception"></interceptionBehavior>
      <constructor>
        <param name ="rep">
          <dependency name ="repDynamic"></dependency>
        </param>
        <param name ="repd">
          <dependency name ="repDynamicDefinition"></dependency>
        </param>
      </constructor>
    </register>

    <register type ="YuLinTu.Security.ISecurityQuery, YuLinTu.Security"
              mapTo ="YuLinTu.Security.WCF.SecurityClientQuery, YuLinTu.Security.WCF">
      <interceptor type="Microsoft.Practices.Unity.InterceptionExtension.InterfaceInterceptor, Microsoft.Practices.Unity.Interception"></interceptor>
      <!--<interceptionBehavior type="YuLinTu.Unity.Interception.TimerInterception, YuLinTu.Unity.Interception"></interceptionBehavior>-->
      <interceptionBehavior type="YuLinTu.Unity.Interception.TrackerInterception, YuLinTu.Unity.Interception"></interceptionBehavior>
    </register>
    <register type ="YuLinTu.Security.ISecurityEdit, YuLinTu.Security"
              mapTo ="YuLinTu.Security.WCF.SecurityClientEdit, YuLinTu.Security.WCF">
      <interceptor type="Microsoft.Practices.Unity.InterceptionExtension.InterfaceInterceptor, Microsoft.Practices.Unity.Interception"></interceptor>
      <!--<interceptionBehavior type="YuLinTu.Unity.Interception.TimerInterception, YuLinTu.Unity.Interception"></interceptionBehavior>-->
      <interceptionBehavior type="YuLinTu.Unity.Interception.TrackerInterception, YuLinTu.Unity.Interception"></interceptionBehavior>
    </register>

    <!-- 日志 -->
    <!--
        <register name ="repTrackerObject"
                  type ="YuLinTu.Data.IRepositoryTrackerObject`1[[YuLinTu.Data.TrackerObjectItem, YuLinTu.Data.Framework]], YuLinTu.Data.Framework"
                  mapTo ="YuLinTu.Data.RepositoryTrackerObject`1[[YuLinTu.Data.TrackerObjectItem, YuLinTu.Data.Framework]], YuLinTu.Data.Framework">
            <constructor>
                <param name ="ds">
                    <dependency name="dbSourceSecurity"></dependency>
                </param>
            </constructor>
        </register>
        <register type ="YuLinTu.Data.IBusinessTrackerObject`1[[YuLinTu.Data.TrackerObjectItem, YuLinTu.Data.Framework]], YuLinTu.Data.Framework"
                  mapTo ="YuLinTu.Data.BusinessTrackerObject`1[[YuLinTu.Data.TrackerObjectItem, YuLinTu.Data.Framework]], YuLinTu.Data.Framework">
            <interceptor type="Microsoft.Practices.Unity.InterceptionExtension.InterfaceInterceptor, Microsoft.Practices.Unity.Interception"></interceptor>
            <interceptionBehavior type="YuLinTu.Unity.Interception.TrackerInterception, YuLinTu.Unity.Interception"></interceptionBehavior>
            <constructor>
                <param name ="rep">
                    <dependency name ="repTrackerObject"></dependency>
                </param>
            </constructor>
        </register>
        <register type ="YuLinTu.Data.Framework.WCF.ITrackerClient, YuLinTu.Data.Framework.WCF"
                  mapTo ="YuLinTu.Data.Framework.WCF.TrackerClient, YuLinTu.Data.Framework.WCF">
            <interceptor type="Microsoft.Practices.Unity.InterceptionExtension.InterfaceInterceptor, Microsoft.Practices.Unity.Interception"></interceptor>
            -->
    <!--<interceptionBehavior type="YuLinTu.Unity.Interception.TimerInterception, YuLinTu.Unity.Interception"></interceptionBehavior>-->
    <!--
            <interceptionBehavior type="YuLinTu.Unity.Interception.TrackerInterception, YuLinTu.Unity.Interception"></interceptionBehavior>
        </register>

        -->
    <!-- 枚举 -->
    <!--
        <register name ="repEnum"
                  type ="YuLinTu.Data.IRepositoryEnum`1[[YuLinTu.Data.EnumObject, YuLinTu.Data.Framework]], YuLinTu.Data.Framework"
                  mapTo ="YuLinTu.Data.RepositoryEnum`1[[YuLinTu.Data.EnumObject, YuLinTu.Data.Framework]], YuLinTu.Data.Framework">
            <interceptor type="Microsoft.Practices.Unity.InterceptionExtension.InterfaceInterceptor, Microsoft.Practices.Unity.Interception"></interceptor>
            <interceptionBehavior type="YuLinTu.Unity.Interception.CacheInterception, YuLinTu.Unity.Interception"></interceptionBehavior>
            <constructor>
                <param name ="ds">
                    <dependency name="dbSource"></dependency>
                </param>
            </constructor>
        </register>
        <register type ="YuLinTu.Data.IBusinessEnum`1[[YuLinTu.Data.EnumObject, YuLinTu.Data.Framework]], YuLinTu.Data.Framework"
                  mapTo ="YuLinTu.Data.BusinessEnum`1[[YuLinTu.Data.EnumObject, YuLinTu.Data.Framework]], YuLinTu.Data.Framework">
            <interceptor type="Microsoft.Practices.Unity.InterceptionExtension.InterfaceInterceptor, Microsoft.Practices.Unity.Interception"></interceptor>
            <interceptionBehavior type="YuLinTu.Unity.Interception.TrackerInterception, YuLinTu.Unity.Interception"></interceptionBehavior>
            <constructor>
                <param name ="rep">
                    <dependency name ="repEnum"></dependency>
                </param>
            </constructor>
        </register>

        -->
    <!-- 键值对 -->
    <!--
        <register name ="repKeyValue"
                  type ="YuLinTu.Data.IRepositoryKeyValue`1[[YuLinTu.Data.KeyValueItem, YuLinTu.Data.Framework]], YuLinTu.Data.Framework"
                  mapTo ="YuLinTu.Data.RepositoryKeyValue`1[[YuLinTu.Data.KeyValueItem, YuLinTu.Data.Framework]], YuLinTu.Data.Framework">
            <interceptor type="Microsoft.Practices.Unity.InterceptionExtension.InterfaceInterceptor, Microsoft.Practices.Unity.Interception"></interceptor>
            <interceptionBehavior type="YuLinTu.Unity.Interception.CacheInterception, YuLinTu.Unity.Interception"></interceptionBehavior>
            <constructor>
                <param name ="ds">
                    <dependency name="dbSource"></dependency>
                </param>
            </constructor>
        </register>
        <register type ="YuLinTu.Data.IBusinessKeyValue`1[[YuLinTu.Data.KeyValueItem, YuLinTu.Data.Framework]], YuLinTu.Data.Framework"
                  mapTo ="YuLinTu.Data.BusinessKeyValue`1[[YuLinTu.Data.KeyValueItem, YuLinTu.Data.Framework]], YuLinTu.Data.Framework">
            <interceptor type="Microsoft.Practices.Unity.InterceptionExtension.InterfaceInterceptor, Microsoft.Practices.Unity.Interception"></interceptor>
            <interceptionBehavior type="YuLinTu.Unity.Interception.TrackerInterception, YuLinTu.Unity.Interception"></interceptionBehavior>
            <constructor>
                <param name ="rep">
                    <dependency name ="repKeyValue"></dependency>
                </param>
            </constructor>
        </register>-->

    <!--地域-->
    <register type ="YuLinTu.Library.Repository.IZoneRepository, YuLinTu.Library.Repository"
                     mapTo ="YuLinTu.Library.Repository.ZoneRepository, YuLinTu.Library.Repository">
    </register>
    <register type ="YuLinTu.Library.WorkStation.IZoneWorkStation, YuLinTu.Library.WorkStation"
              mapTo ="YuLinTu.Library.WorkStation.ZoneWorkStation, YuLinTu.Library.WorkStation">
    </register>

    <!--发包方-->
    <register type ="YuLinTu.Library.Repository.ICollectivityTissueRepository, YuLinTu.Library.Repository"
                   mapTo ="YuLinTu.Library.Repository.CollectivityTissueRepository, YuLinTu.Library.Repository">
    </register>

    <register type ="YuLinTu.Library.WorkStation.ISenderWorkStation, YuLinTu.Library.WorkStation"
              mapTo ="YuLinTu.Library.WorkStation.SenderWorkStation, YuLinTu.Library.WorkStation">
    </register>

    <!--摸底调查表-->
    <register type ="YuLinTu.Library.Repository.ISurveyFormRepository, YuLinTu.Library.Repository"
                   mapTo ="YuLinTu.Library.Repository.SurveyFormRepository, YuLinTu.Library.Repository">
    </register>

    <register type ="YuLinTu.Library.WorkStation.ISurveyFormWorkStation, YuLinTu.Library.WorkStation"
              mapTo ="YuLinTu.Library.WorkStation.SurveyFormWorkStation, YuLinTu.Library.WorkStation">
    </register>

    <!--股权关系-->
    <register type ="YuLinTu.Library.Repository.IBelongRelationRespository, YuLinTu.Library.Repository"
             mapTo ="YuLinTu.Library.Repository.BelongRelationRespository, YuLinTu.Library.Repository">
    </register>
    <register type ="YuLinTu.Library.WorkStation.IBelongRelationWorkStation, YuLinTu.Library.WorkStation"
              mapTo ="YuLinTu.Library.WorkStation.BelongRelationWorkStation, YuLinTu.Library.WorkStation">
    </register>

    <!--确股合同-->
    <register type ="YuLinTu.Library.Repository.IStockConcordRespository, YuLinTu.Library.Repository"
         mapTo ="YuLinTu.Library.Repository.StockConcordRespository, YuLinTu.Library.Repository">
    </register>
    <register type ="YuLinTu.Library.WorkStation.IStockConcordWorkStation, YuLinTu.Library.WorkStation"
              mapTo ="YuLinTu.Library.WorkStation.StockConcordWorkStation, YuLinTu.Library.WorkStation">
    </register>

    <!--确股权证-->
    <register type ="YuLinTu.Library.Repository.IStockWarrantRespository, YuLinTu.Library.Repository"
         mapTo ="YuLinTu.Library.Repository.StockWarrantRespository, YuLinTu.Library.Repository">
    </register>
    <register type ="YuLinTu.Library.WorkStation.IStockWarrantWorkStation, YuLinTu.Library.WorkStation"
              mapTo ="YuLinTu.Library.WorkStation.StockWarrantWorkStation, YuLinTu.Library.WorkStation">
    </register>

    <!--承包方-->
    <!--<register type ="YuLinTu.Library.Repository.IVirtualPersonRepository`1, YuLinTu.Library.Repository"
                     mapTo ="YuLinTu.Library.Repository.VirtualPersonRepository`1, YuLinTu.Library.Repository">
      </register>-->
    <register type ="YuLinTu.Library.Repository.IVirtualPersonRepository`1[[YuLinTu.Library.Entity.LandVirtualPerson, YuLinTu.Library.Entity]], YuLinTu.Library.Repository"
                   mapTo ="YuLinTu.Library.Repository.VirtualPersonRepository`1[[YuLinTu.Library.Entity.LandVirtualPerson, YuLinTu.Library.Entity]], YuLinTu.Library.Repository">
    </register>
    <register type ="YuLinTu.Library.Repository.IVirtualPersonRepository`1[[YuLinTu.Library.Entity.WoodVirtualPerson, YuLinTu.Library.Entity]], YuLinTu.Library.Repository"
                   mapTo ="YuLinTu.Library.Repository.VirtualPersonRepository`1[[YuLinTu.Library.Entity.WoodVirtualPerson, YuLinTu.Library.Entity]], YuLinTu.Library.Repository">
    </register>
    <register type ="YuLinTu.Library.Repository.IVirtualPersonRepository`1[[YuLinTu.Library.Entity.YardVirtualPerson, YuLinTu.Library.Entity]], YuLinTu.Library.Repository"
                   mapTo ="YuLinTu.Library.Repository.VirtualPersonRepository`1[[YuLinTu.Library.Entity.YardVirtualPerson, YuLinTu.Library.Entity]], YuLinTu.Library.Repository">
    </register>
    <register type ="YuLinTu.Library.Repository.IVirtualPersonRepository`1[[YuLinTu.Library.Entity.CollectiveLandVirtualPerson, YuLinTu.Library.Entity]], YuLinTu.Library.Repository"
                   mapTo ="YuLinTu.Library.Repository.VirtualPersonRepository`1[[YuLinTu.Library.Entity.CollectiveLandVirtualPerson, YuLinTu.Library.Entity]], YuLinTu.Library.Repository">
    </register>
    <register type ="YuLinTu.Library.Repository.IVirtualPersonRepository`1[[YuLinTu.Library.Entity.HouseVirtualPerson, YuLinTu.Library.Entity]], YuLinTu.Library.Repository"
                   mapTo ="YuLinTu.Library.Repository.VirtualPersonRepository`1[[YuLinTu.Library.Entity.HouseVirtualPerson, YuLinTu.Library.Entity]], YuLinTu.Library.Repository">
    </register>
    <register type ="YuLinTu.Library.Repository.IVirtualPersonRepository`1[[YuLinTu.Library.Entity.TableVirtualPerson, YuLinTu.Library.Entity]], YuLinTu.Library.Repository"
                   mapTo ="YuLinTu.Library.Repository.VirtualPersonRepository`1[[YuLinTu.Library.Entity.TableVirtualPerson, YuLinTu.Library.Entity]], YuLinTu.Library.Repository">
    </register>

    <register type ="YuLinTu.Library.WorkStation.IVirtualPersonWorkStation`1[[YuLinTu.Library.Entity.LandVirtualPerson, YuLinTu.Library.Entity]],  YuLinTu.Library.WorkStation"
                  mapTo ="YuLinTu.Library.WorkStation.VirtualPersonWorkStation`1[[YuLinTu.Library.Entity.LandVirtualPerson, YuLinTu.Library.Entity]], YuLinTu.Library.WorkStation">
    </register>
    <register type ="YuLinTu.Library.WorkStation.IVirtualPersonWorkStation`1[[YuLinTu.Library.Entity.WoodVirtualPerson, YuLinTu.Library.Entity]],  YuLinTu.Library.WorkStation"
                 mapTo ="YuLinTu.Library.WorkStation.VirtualPersonWorkStation`1[[YuLinTu.Library.Entity.WoodVirtualPerson, YuLinTu.Library.Entity]], YuLinTu.Library.WorkStation">
    </register>
    <register type ="YuLinTu.Library.WorkStation.IVirtualPersonWorkStation`1[[YuLinTu.Library.Entity.YardVirtualPerson, YuLinTu.Library.Entity]],  YuLinTu.Library.WorkStation"
                 mapTo ="YuLinTu.Library.WorkStation.VirtualPersonWorkStation`1[[YuLinTu.Library.Entity.YardVirtualPerson, YuLinTu.Library.Entity]], YuLinTu.Library.WorkStation">
    </register>
    <register type ="YuLinTu.Library.WorkStation.IVirtualPersonWorkStation`1[[YuLinTu.Library.Entity.CollectiveLandVirtualPerson, YuLinTu.Library.Entity]],  YuLinTu.Library.WorkStation"
                 mapTo ="YuLinTu.Library.WorkStation.VirtualPersonWorkStation`1[[YuLinTu.Library.Entity.CollectiveLandVirtualPerson, YuLinTu.Library.Entity]], YuLinTu.Library.WorkStation">
    </register>
    <register type ="YuLinTu.Library.WorkStation.IVirtualPersonWorkStation`1[[YuLinTu.Library.Entity.HouseVirtualPerson, YuLinTu.Library.Entity]],  YuLinTu.Library.WorkStation"
                 mapTo ="YuLinTu.Library.WorkStation.VirtualPersonWorkStation`1[[YuLinTu.Library.Entity.HouseVirtualPerson, YuLinTu.Library.Entity]], YuLinTu.Library.WorkStation">
    </register>
    <register type ="YuLinTu.Library.WorkStation.IVirtualPersonWorkStation`1[[YuLinTu.Library.Entity.TableVirtualPerson, YuLinTu.Library.Entity]],  YuLinTu.Library.WorkStation"
                mapTo ="YuLinTu.Library.WorkStation.VirtualPersonWorkStation`1[[YuLinTu.Library.Entity.TableVirtualPerson, YuLinTu.Library.Entity]], YuLinTu.Library.WorkStation">
    </register>

    <!--<register type ="YuLinTu.Library.WorkStation.IVirtualPersonWorkStation`1, YuLinTu.Library.WorkStation"
              mapTo ="YuLinTu.Library.WorkStation.VirtualPersonWorkStation`1, YuLinTu.Library.WorkStation">
    </register>-->

    <!--数据字典-->
    <register type="YuLinTu.Library.Repository.IDictionaryRepository, YuLinTu.Library.Repository"
              mapTo="YuLinTu.Library.Repository.DictionaryRepository, YuLinTu.Library.Repository">
    </register>

    <register type="YuLinTu.Library.WorkStation.IDictionaryWorkStation, YuLinTu.Library.WorkStation"
              mapTo="YuLinTu.Library.WorkStation.DictionaryWorkStation, YuLinTu.Library.WorkStation">
    </register>

    <!--二轮地块-->
    <register type="YuLinTu.Library.Repository.ISecondTableLandRepository, YuLinTu.Library.Repository"
              mapTo="YuLinTu.Library.Repository.SecondTableLandRepository, YuLinTu.Library.Repository">
    </register>

    <register type="YuLinTu.Library.WorkStation.ISecondTableLandWorkStation, YuLinTu.Library.WorkStation"
              mapTo="YuLinTu.Library.WorkStation.SecondTableLandWorkStation, YuLinTu.Library.WorkStation">
    </register>

    <!--承包地块-->
    <register type="YuLinTu.Library.Repository.IContractLandRepository, YuLinTu.Library.Repository"
              mapTo="YuLinTu.Library.Repository.ContractLandRepository, YuLinTu.Library.Repository">
    </register>
    <register type="YuLinTu.Library.Repository.IContractLandDeleteRepository, YuLinTu.Library.Repository"
              mapTo="YuLinTu.Library.Repository.ContractLandDeleteRepository, YuLinTu.Library.Repository">
    </register>

    <register type="YuLinTu.Library.WorkStation.IContractLandWorkStation, YuLinTu.Library.WorkStation"
              mapTo="YuLinTu.Library.WorkStation.ContractLandWorkStation, YuLinTu.Library.WorkStation">
    </register>
    <register type="YuLinTu.Library.Repository.IContractLandMarkRepository, YuLinTu.Library.Repository"
            mapTo="YuLinTu.Library.Repository.ContractLandMarkRepository, YuLinTu.Library.Repository">
    </register>

    <register type="YuLinTu.Library.WorkStation.IContractLandMarkWorkStation, YuLinTu.Library.WorkStation"
              mapTo="YuLinTu.Library.WorkStation.ContractLandMarkWorkStation, YuLinTu.Library.WorkStation">
    </register>

    <!--承包合同-->
    <register type="YuLinTu.Library.Repository.IContractConcordRepository, YuLinTu.Library.Repository"
              mapTo="YuLinTu.Library.Repository.ContractConcordRepository, YuLinTu.Library.Repository">
    </register>

    <register type="YuLinTu.Library.WorkStation.IConcordWorkStation, YuLinTu.Library.WorkStation"
              mapTo="YuLinTu.Library.WorkStation.ConcordWorkStation, YuLinTu.Library.WorkStation">
    </register>

    <!--农村土地承包经营申请登记表-->
    <register type="YuLinTu.Library.Repository.IContractRequireTableRepository, YuLinTu.Library.Repository"
              mapTo="YuLinTu.Library.Repository.ContractRequireTableRepository, YuLinTu.Library.Repository">
    </register>

    <register type="YuLinTu.Library.WorkStation.IContractRequireTableWorkStation, YuLinTu.Library.WorkStation"
             mapTo="YuLinTu.Library.WorkStation.ContractRequireTableWorkStation, YuLinTu.Library.WorkStation">
    </register>

    <!--承包权证-->
    <register type="YuLinTu.Library.Repository.IContractRegeditBookRepository, YuLinTu.Library.Repository"
              mapTo="YuLinTu.Library.Repository.ContractRegeditBookRepository, YuLinTu.Library.Repository">
    </register>

    <register type="YuLinTu.Library.WorkStation.IContractRegeditBookWorkStation, YuLinTu.Library.WorkStation"
             mapTo="YuLinTu.Library.WorkStation.ContractRegeditBookWorkStation, YuLinTu.Library.WorkStation">
    </register>

    <!--界址点-->
    <register type="YuLinTu.Library.Repository.IBuildLandBoundaryAddressDotRepository, YuLinTu.Library.Repository"
             mapTo="YuLinTu.Library.Repository.BuildLandBoundaryAddressDotRepository, YuLinTu.Library.Repository">
    </register>

    <register type="YuLinTu.Library.WorkStation.IBuildLandBoundaryAddressDotWorkStation, YuLinTu.Library.WorkStation"
             mapTo="YuLinTu.Library.WorkStation.BuildLandBoundaryAddressDotWorkStation, YuLinTu.Library.WorkStation">
    </register>

    <!--界址线-->
    <register type="YuLinTu.Library.Repository.IBuildLandBoundaryAddressCoilRepository, YuLinTu.Library.Repository"
             mapTo="YuLinTu.Library.Repository.BuildLandBoundaryAddressCoilRepository, YuLinTu.Library.Repository">
    </register>

    <register type="YuLinTu.Library.WorkStation.IBuildLandBoundaryAddressCoilWorkStation, YuLinTu.Library.WorkStation"
             mapTo="YuLinTu.Library.WorkStation.BuildLandBoundaryAddressCoilWorkStation, YuLinTu.Library.WorkStation">
    </register>

    <!--调查宗地-->
    <register type="YuLinTu.Library.Repository.IDCZDRepository, YuLinTu.Library.Repository"
             mapTo="YuLinTu.Library.Repository.DCZDRepository, YuLinTu.Library.Repository">
    </register>

    <register type="YuLinTu.Library.WorkStation.IDCZDWorkStation, YuLinTu.Library.WorkStation"
             mapTo="YuLinTu.Library.WorkStation.DCZDWorkStation, YuLinTu.Library.WorkStation">
    </register>

    <!--点状地物-->
    <register type="YuLinTu.Library.Repository.IDZDWRepository, YuLinTu.Library.Repository"
             mapTo="YuLinTu.Library.Repository.DZDWRepository, YuLinTu.Library.Repository">
    </register>

    <register type="YuLinTu.Library.WorkStation.IDZDWWorkStation, YuLinTu.Library.WorkStation"
             mapTo="YuLinTu.Library.WorkStation.DZDWWorkStation, YuLinTu.Library.WorkStation">
    </register>

    <!--线状地物-->
    <register type="YuLinTu.Library.Repository.IXZDWRepository, YuLinTu.Library.Repository"
             mapTo="YuLinTu.Library.Repository.XZDWRepository, YuLinTu.Library.Repository">
    </register>

    <register type="YuLinTu.Library.WorkStation.IXZDWWorkStation, YuLinTu.Library.WorkStation"
             mapTo="YuLinTu.Library.WorkStation.XZDWWorkStation, YuLinTu.Library.WorkStation">
    </register>

    <!--面状宗地-->
    <register type="YuLinTu.Library.Repository.IMZDWRepository, YuLinTu.Library.Repository"
             mapTo="YuLinTu.Library.Repository.MZDWRepository, YuLinTu.Library.Repository">
    </register>

    <register type="YuLinTu.Library.WorkStation.IMZDWWorkStation, YuLinTu.Library.WorkStation"
             mapTo="YuLinTu.Library.WorkStation.MZDWWorkStation, YuLinTu.Library.WorkStation">
    </register>

    <!--基本农田保护区-->
    <register type="YuLinTu.Library.Repository.IFarmLandConserveRepository, YuLinTu.Library.Repository"
             mapTo="YuLinTu.Library.Repository.FarmLandConserveRepository, YuLinTu.Library.Repository">
    </register>

    <register type="YuLinTu.Library.WorkStation.IFarmLandConserveWorkStation, YuLinTu.Library.WorkStation"
             mapTo="YuLinTu.Library.WorkStation.FarmLandConserveWorkStation, YuLinTu.Library.WorkStation">
    </register>

    <!--控制点-->
    <register type="YuLinTu.Library.Repository.IControlPointRepository, YuLinTu.Library.Repository"
             mapTo="YuLinTu.Library.Repository.ControlPointRepository, YuLinTu.Library.Repository">
    </register>

    <register type="YuLinTu.Library.WorkStation.IControlPointWorkStation, YuLinTu.Library.WorkStation"
             mapTo="YuLinTu.Library.WorkStation.ControlPointWorkStation, YuLinTu.Library.WorkStation">
    </register>

    <!--区域界线-->
    <register type="YuLinTu.Library.Repository.IZoneBoundaryRepository, YuLinTu.Library.Repository"
             mapTo="YuLinTu.Library.Repository.ZoneBoundaryRepository, YuLinTu.Library.Repository">
    </register>

    <register type="YuLinTu.Library.WorkStation.IZoneBoundaryWorkStation, YuLinTu.Library.WorkStation"
             mapTo="YuLinTu.Library.WorkStation.ZoneBoundaryWorkStation, YuLinTu.Library.WorkStation">
    </register>
  </container>
</unity>